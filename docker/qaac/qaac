#!/usr/bin/env bash

set -euo pipefail

d=$(pwd)

OPT_RM=true
OPT_X=false
OPT_SHELL=false
declare -a docker_args=()
declare -a app_args=()

# eval set -- "$(POSIXLY_CORRECT=1 getopt --long "rm,no-rm,shell" --options "xit" --name "$0" -- "$@")"

while true ; do
    case "${1:-}" in
        --rm)    OPT_RM=true ; shift ;;
        --no-rm) OPT_RM=false ; shift ;;
        -x)      OPT_X=true ; shift ;;
        --shell) OPT_SHELL=true ; shift ;;
        -i|-t)
            docker_args=(${docker_args[@]+"${docker_args[@]}"} "$1")
            shift
            ;;
        --TODO)
            app_args=(${app_args[@]+"${app_args[@]}"} "$1" "$2")
            shift 2
            ;;
        --)      shift ; break ;;
        *)       break ;;
    esac
done

$OPT_X && set -x

# qaac/refalac doesn't need X
DISPLAY=

app_args=(${app_args[@]+"${app_args[@]}"} "$@")

$OPT_SHELL && docker_args=(${docker_args[@]+"${docker_args[@]}"} -i -t)

set -- docker container run
set -- "$@" $($OPT_RM && echo --rm || echo --name qaac)
if [ -n "${DISPLAY:-}" ] ; then
    [[ -d "/tmp/.X11-unix" ]] && \
        set -- "$@" -v /tmp/.X11-unix:/tmp/.X11-unix
    [[ -d "$HOME/.Xauthority" ]] && \
        set -- "$@" -v "$HOME/.Xauthority":"/home/developer/.Xauthority"
    set -- "$@" ${DISPLAY:+-e DISPLAY="$DISPLAY"}
fi
set -- "$@" -v "${TMPDIR:-/tmp}":"/tmp"
set -- "$@" -v "$d":"/home/developer/pwd"
set -- "$@" -v "$d":"$d" -w "$d"
set -- "$@" ${docker_args[@]+"${docker_args[@]}"}

$OPT_SHELL && set -- "$@" --entrypoint /bin/bash

set -- "$@" qualip/qaac
set -- "$@" ${app_args[@]+"${app_args[@]}"}
"$@"
